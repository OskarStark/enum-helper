on:
    push:
        branches:
            - main
    pull_request:

name: CI

jobs:
    coding-standards:
        name: "Coding Standards"

        runs-on: "ubuntu-latest"

        strategy:
            matrix:
                php-version:
                    - "8.1"

        steps:
            - name: "Checkout code"
              uses: actions/checkout@v3

            -
                name: "Install PHP with extensions"
                uses: "shivammathur/setup-php@2.24.0"
                with:
                    coverage: "none"
                    php-version: "${{ matrix.php-version }}"
                    tools: "composer:v2"

            -
                name: "Validate composer.json"
                run: "composer validate"

            -
                name: "Install dependencies with composer"
                uses: "ramsey/composer-install@2.2.0"
                with:
                    composer-options: "--no-scripts"

            -
                name: "Run friendsofphp/php-cs-fixer"
                run: "vendor/bin/php-cs-fixer fix --diff --verbose"

    static-code-analysis:
        name: "Static Code Analysis"

        runs-on: "ubuntu-latest"

        strategy:
            matrix:
                php-version:
                    - "8.1"

        steps:
            -
                name: "Checkout"
                uses: "actions/checkout@v3"

            -
                name: "Install PHP with extensions"
                uses: "shivammathur/setup-php@2.24.0"
                with:
                    coverage: "none"
                    php-version: "${{ matrix.php-version }}"
                    tools: "composer:v2"

            -
                name: "Install dependencies with composer"
                uses: "ramsey/composer-install@2.2.0"

            -
                name: "Run a static code analysis with phpstan/phpstan and default configuration"
                run: "vendor/bin/phpstan analyse --configuration=phpstan-default.neon --no-progress"

    tests:
        name: "PHP ${{ matrix.php-version }} + ${{ matrix.dependencies }}"

        runs-on: ubuntu-latest

        continue-on-error: ${{ matrix.allowed-to-fail }}

        strategy:
            matrix:
                php-version:
                    - '8.1'
                dependencies:
                    - 'lowest'
                    - 'highest'
                allowed-to-fail: [false]

        steps:
            - name: "Checkout code"
              uses: actions/checkout@v3

            - name: Install PHP with extensions
              uses: shivammathur/setup-php@2.24.0
              with:
                  coverage: "none"
                  php-version: "${{ matrix.php-version }}"
                  tools: "composer:v2"

            - name: Add PHPUnit matcher
              run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

            - name: "Composer install"
              uses: "ramsey/composer-install@2.2.0"
              with:
                  dependency-versions: "${{ matrix.dependencies }}"
                  composer-options: "--prefer-dist"

            - name: Run tests
              run: vendor/bin/phpunit -v
